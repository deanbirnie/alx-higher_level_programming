==========================================
All test cases for matrix_divided function
==========================================

The matrix_divided function

Usage:
matrix_divided(matrix, div)

================================================================================

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> div = 2
>>> matrix_divided(matrix, div)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

>>> matrix = [[-10, 20, 30.5], [-40.7, 50.2, -60]]
>>> div = -5
>>> matrix_divided(matrix, div)
[[2.0, -4.0, -6.1], [8.14, -10.04, 12.0]]

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> div = 0
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> div = 3
>>> matrix_divided(matrix, div)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0], [2.33, 2.67, 3.0]]

>>> matrix = [[1, 2], [3, 4, 5]]
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> matrix = [[1, 2, 3], [4, 5, "six"]]
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = "not a matrix"
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> div = "two"
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
    ...
TypeError: div must be a number
